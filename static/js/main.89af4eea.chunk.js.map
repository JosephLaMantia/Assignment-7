{"version":3,"sources":["components/SearchField.js","components/TrendingGifs.js","components/NavBar.js","components/RandomSearch.js","App.js","reportWebVitals.js","index.js"],"names":["SearchField","handleChange","event","console","log","setState","gifName","target","value","getData","a","fetch","state","response","ok","Error","json","responseObject","allGifs","data","filteredGifs","handleSearch","alert","rating","handleRating","handleFilter","filter","gif","id","for","type","name","placeholder","onChange","this","onClick","selected","map","class","src","images","original","url","Component","TrendingGifs","gifList","componentDidMount","bind","then","res","alt","React","NavBar","className","to","window","location","href","RandomSearch","handleRandom","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89af4eea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class SearchField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gifName: \"\",\r\n      rating: \"all\",\r\n      allGifs: [],\r\n      filteredGifs: [],\r\n    };\r\n  }\r\n\r\n  //every time a user enters a gif name, update it\r\n  handleChange = (event) => {\r\n    console.log(\"inside handleChange\");\r\n    this.setState({ gifName: event.target.value });\r\n  };\r\n\r\n  //get data from an api\r\n  getData = async () => {\r\n    console.log(\"inside getData\");\r\n    try {\r\n\r\n      //get a response from an api\r\n      let response = await fetch(\r\n        \"https://api.giphy.com/v1/gifs/search?q=\" +\r\n          this.state.gifName +\r\n          \"&api_key=W8fWbmNISlnnYSoZC6fsnCxrmYHlodt8\"\r\n      );\r\n\r\n      //if there was an error, print it\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n\r\n      //turn the response into a data object\r\n      let responseObject = await response.json();\r\n\r\n      this.setState({\r\n        allGifs: responseObject.data,\r\n        filteredGifs: responseObject.data\r\n      })\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //if the input field is empty, alert the user\r\n  //if not, fetch the data from an api\r\n  handleSearch=()=>{\r\n    if(this.state.gifName === \"\"){\r\n      alert(\"no results\")\r\n    }\r\n    else{\r\n      this.getData();\r\n      this.setState({\r\n        rating: \"all\"\r\n      })\r\n    }\r\n  };\r\n\r\n  //change the state of the rating based on dropdown menu choice\r\n  handleRating=(event)=>{\r\n    console.log(\"inside handle rating\");\r\n    this.setState({rating: event.target.value});\r\n  };\r\n\r\n  //get the rating and filter the original gif array based on it\r\n  handleFilter=()=>{\r\n    switch(this.state.rating){\r\n      case \"g\":\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs.filter(gif => gif.rating === \"g\")\r\n        })\r\n        break;\r\n      case \"pg\":\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs.filter(gif => gif.rating === \"pg\")\r\n        })\r\n        break;\r\n      case \"pg-13\":\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs.filter(gif => gif.rating === \"pg-13\")\r\n        })\r\n        break;\r\n      default:\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs\r\n        })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div id=\"search-filter-field\">\r\n\r\n        <div id=\"search-field\">\r\n          <label id=\"search-text\" for=\"ratings\">Enter a Keyword:</label>\r\n          <input\r\n            id=\"search-input\"\r\n            type=\"text\"\r\n            name=\"searchInput\"\r\n            placeholder=\"Search for a gif!\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button id=\"search-btn\" onClick={() => this.handleSearch()}>Search</button>\r\n        </div>\r\n        \r\n        <div id=\"filter-field\">\r\n          <label id=\"filter-text\" for=\"ratings\">Filter by rating:</label>\r\n          <select id=\"dropdown\" name=\"ratings\" onChange={this.handleRating}>\r\n            <option value=\"all\" selected>Show all</option>\r\n            <option value=\"g\">G (General Audience)</option>\r\n            <option value=\"pg\">PG (Parental Guidance Suggested)</option>\r\n            <option value=\"pg-13\">PG-13 (Parents Strongly Cautioned)</option>  \r\n          </select>\r\n          <button id=\"filter-btn\" onClick={() => this.handleFilter()}>Filter</button>\r\n        </div>\r\n\r\n        <div id=\"gif-field\">\r\n          {this.state.filteredGifs.map(gif=>{\r\n              return <img class=\"gif\" src={gif.images.original.url}/>\r\n          })}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport App from '../App';\r\nimport SearchField from \"./SearchField\";\r\n\r\nclass TrendingGifs extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gifList: []\r\n    };\r\n    this.componentDidMount=this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"In Mount\");\r\n    fetch(\r\n      \"https://api.giphy.com/v1/gifs/trending?api_key=W8fWbmNISlnnYSoZC6fsnCxrmYHlodt8\"\r\n    )\r\n      .then(response => response.json())\r\n      .then((res) => {\r\n          console.log(res.data)\r\n        this.setState({\r\n          gifList: res.data,\r\n        });\r\n        console.log(this.state.gifList);\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        \r\n        <div>\r\n        { this.state.gifList.map(gif => {\r\n            return (\r\n                <img class=\"gif\" src={gif.images.original.url} alt=\"gif\"/>\r\n            )\r\n\r\n        })}\r\n        </div>\r\n        )}\r\n    }\r\n\r\nexport default TrendingGifs;","import React, { Component } from 'react'\r\nimport App from '../App'\r\nimport SearchField from './SearchField'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"App-header\">\r\n                    <h1>GIPHY</h1>\r\n                </div>\r\n\r\n                <div className=\"nav-bar\">\r\n                    <Link to=\"/\">\r\n                        <button className=\"nav-button\">\r\n                            TRENDING\r\n                        </button>\r\n                    </Link>\r\n                    <Link to=\"/Search\">\r\n                        <button className=\"nav-button\">\r\n                            SEARCH\r\n\r\n                        </button>\r\n                    </Link>\r\n                    <Link to=\"/Random\">\r\n                        <button className=\"nav-button\" onClick={() => window.location.href=\"/Random\"}>\r\n                            RANDOM\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport App from '../App';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass RandomSearch extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        gifList: []\r\n      };\r\n      this.componentDidMount=this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"In Mount\");\r\n        fetch(\r\n          \"https://api.giphy.com/v1/gifs/random?api_key=W8fWbmNISlnnYSoZC6fsnCxrmYHlodt8\"\r\n        )\r\n          .then(response => response.json())\r\n          .then((res) => {\r\n              console.log(res.data)\r\n            this.setState({\r\n                gifList: [...this.state.gifList, res.data]\r\n            });\r\n            console.log(this.state.gifList);\r\n          })\r\n      }\r\n\r\n      handleRandom=()=>{\r\n        // e.preventDefault();\r\n        this.getData();\r\n        <Link to=\"./Random\"></Link>\r\n      }\r\n\r\n      render() {\r\n        return (\r\n\r\n            <div>\r\n                <br/><br/>\r\n            { this.state.gifList.map(gif => {\r\n                return (\r\n                    <img id=\"gif\" src={gif.images.original.url} alt=\"gif\"/>\r\n                )\r\n    \r\n            })}\r\n            </div>\r\n            \r\n            )}\r\n        }\r\n    \r\n    export default RandomSearch;\r\n    ","import './App.css';\r\nimport React from \"react\";\r\nimport SearchField from './components/SearchField';\r\nimport TrendingGifs from './components/TrendingGifs';\r\nimport NavBar from './components/NavBar';\r\nimport { BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport RandomSearch from './components/RandomSearch';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <NavBar/>\r\n        <Switch>\r\n        <Route path=\"/\" exact component={TrendingGifs}/>\r\n        <Route path=\"/Search\" component={SearchField}/>\r\n        <Route path=\"/Random\" component={RandomSearch}/>\r\n        </Switch>\r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}