[{"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\index.js":"1","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\reportWebVitals.js":"2","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\App.js":"3","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\TrendingGifs.js":"4","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\NavBar.js":"5","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\SearchField.js":"6"},{"size":500,"mtime":1610121254323,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610121254323,"results":"9","hashOfConfig":"8"},{"size":562,"mtime":1610667685690,"results":"10","hashOfConfig":"8"},{"size":991,"mtime":1610668721726,"results":"11","hashOfConfig":"8"},{"size":867,"mtime":1610668595121,"results":"12","hashOfConfig":"8"},{"size":3477,"mtime":1610667275912,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"bzmf2r",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\index.js",[],["28","29"],"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\reportWebVitals.js",[],"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\App.js",[],"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\TrendingGifs.js",["30","31","32"],"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\NavBar.js",["33","34"],"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\SearchField.js",["35"],"import React, { Component } from \"react\";\r\n\r\nexport default class SearchField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gifName: \"\",\r\n      rating: \"all\",\r\n      allGifs: [],\r\n      filteredGifs: [],\r\n    };\r\n  }\r\n\r\n  //every time a user enters a gif name, update it\r\n  handleChange = (event) => {\r\n    console.log(\"inside handleChange\");\r\n    this.setState({ gifName: event.target.value });\r\n  };\r\n\r\n  //get data from an api\r\n  getData = async () => {\r\n    console.log(\"inside getData\");\r\n    try {\r\n\r\n      //get a response from an api\r\n      let response = await fetch(\r\n        \"http://api.giphy.com/v1/gifs/search?q=\" +\r\n          this.state.gifName +\r\n          \"&api_key=W8fWbmNISlnnYSoZC6fsnCxrmYHlodt8\"\r\n      );\r\n\r\n      //if there was an error, print it\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n\r\n      //turn the response into a data object\r\n      let responseObject = await response.json();\r\n\r\n      this.setState({\r\n        allGifs: responseObject.data,\r\n        filteredGifs: responseObject.data\r\n      })\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //if the input field is empty, alert the user\r\n  //if not, fetch the data from an api\r\n  handleSearch=()=>{\r\n    if(this.state.gifName === \"\"){\r\n      alert(\"no results\")\r\n    }\r\n    else{\r\n      this.getData();\r\n      this.setState({\r\n        rating: \"all\"\r\n      })\r\n    }\r\n  };\r\n\r\n  //change the state of the rating based on dropdown menu choice\r\n  handleRating=(event)=>{\r\n    console.log(\"inside handle rating\");\r\n    this.setState({rating: event.target.value});\r\n  };\r\n\r\n  //get the rating and filter the original gif array based on it\r\n  handleFilter=()=>{\r\n    switch(this.state.rating){\r\n      case \"g\":\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs.filter(gif => gif.rating === \"g\")\r\n        })\r\n        break;\r\n      case \"pg\":\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs.filter(gif => gif.rating === \"pg\")\r\n        })\r\n        break;\r\n      case \"pg-13\":\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs.filter(gif => gif.rating === \"pg-13\")\r\n        })\r\n        break;\r\n      default:\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs\r\n        })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n\r\n        <div id=\"search-field\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"searchInput\"\r\n            placeholder=\"Search for a gif!\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button id=\"search-btn\" onClick={() => this.handleSearch()}>Search</button>\r\n        </div>\r\n        \r\n        <div id=\"filter-field\">\r\n          <label for=\"ratings\">Filter by rating:</label>\r\n          <select name=\"ratings\" onChange={this.handleRating}>\r\n            <option value=\"all\" selected>Show all</option>\r\n            <option value=\"g\">G (General Audience)</option>\r\n            <option value=\"pg\">PG (Parental Guidance Suggested)</option>\r\n            <option value=\"pg-13\">PG-13 (Parents Strongly Cautioned)</option>  \r\n          </select>\r\n          <button id=\"filter-btn\" onClick={() => this.handleFilter()}>Filter</button>\r\n        </div>\r\n\r\n        <div id=\"gif-field\">\r\n          {this.state.filteredGifs.map(gif=>{\r\n              return <img class=\"gif\" src={gif.images.original.url}/>\r\n          })}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"40","severity":1,"message":"44","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":11},{"ruleId":"40","severity":1,"message":"45","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":2,"column":8,"nodeType":"42","messageId":"43","endLine":2,"endColumn":11},{"ruleId":"40","severity":1,"message":"45","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":19},{"ruleId":"46","severity":1,"message":"47","line":123,"column":22,"nodeType":"48","endLine":123,"endColumn":70},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","'SearchField' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]