[{"C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\index.js":"1","C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\App.js":"2","C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\reportWebVitals.js":"3","C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\components\\TrendingGifs.js":"4","C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\components\\SearchField.js":"5","C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\components\\NavBar.js":"6","C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\components\\RandomSearch.js":"7"},{"size":517,"mtime":1610855124379,"results":"8","hashOfConfig":"9"},{"size":699,"mtime":1610855124376,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1610855124380,"results":"11","hashOfConfig":"9"},{"size":990,"mtime":1610855124378,"results":"12","hashOfConfig":"9"},{"size":3637,"mtime":1610855124378,"results":"13","hashOfConfig":"9"},{"size":1114,"mtime":1610855124377,"results":"14","hashOfConfig":"9"},{"size":1304,"mtime":1610855124377,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"npbb61",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\index.js",[],["36","37"],"C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\App.js",[],"C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\reportWebVitals.js",[],"C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\components\\TrendingGifs.js",["38","39","40"],"import React, { Component } from \"react\";\r\nimport App from '../App';\r\nimport SearchField from \"./SearchField\";\r\n\r\nclass TrendingGifs extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gifList: []\r\n    };\r\n    this.componentDidMount=this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"In Mount\");\r\n    fetch(\r\n      \"https://api.giphy.com/v1/gifs/trending?api_key=W8fWbmNISlnnYSoZC6fsnCxrmYHlodt8\"\r\n    )\r\n      .then(response => response.json())\r\n      .then((res) => {\r\n          console.log(res.data)\r\n        this.setState({\r\n          gifList: res.data,\r\n        });\r\n        console.log(this.state.gifList);\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        \r\n        <div>\r\n        { this.state.gifList.map(gif => {\r\n            return (\r\n                <img class=\"gif\" src={gif.images.original.url} alt=\"gif\"/>\r\n            )\r\n\r\n        })}\r\n        </div>\r\n        )}\r\n    }\r\n\r\nexport default TrendingGifs;","C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\components\\SearchField.js",["41"],"import React, { Component } from \"react\";\r\n\r\nexport default class SearchField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gifName: \"\",\r\n      rating: \"all\",\r\n      allGifs: [],\r\n      filteredGifs: [],\r\n    };\r\n  }\r\n\r\n  //every time a user enters a gif name, update it\r\n  handleChange = (event) => {\r\n    console.log(\"inside handleChange\");\r\n    this.setState({ gifName: event.target.value });\r\n  };\r\n\r\n  //get data from an api\r\n  getData = async () => {\r\n    console.log(\"inside getData\");\r\n    try {\r\n\r\n      //get a response from an api\r\n      let response = await fetch(\r\n        \"https://api.giphy.com/v1/gifs/search?q=\" +\r\n          this.state.gifName +\r\n          \"&api_key=W8fWbmNISlnnYSoZC6fsnCxrmYHlodt8\"\r\n      );\r\n\r\n      //if there was an error, print it\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n\r\n      //turn the response into a data object\r\n      let responseObject = await response.json();\r\n\r\n      this.setState({\r\n        allGifs: responseObject.data,\r\n        filteredGifs: responseObject.data\r\n      })\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //if the input field is empty, alert the user\r\n  //if not, fetch the data from an api\r\n  handleSearch=()=>{\r\n    if(this.state.gifName === \"\"){\r\n      alert(\"no results\")\r\n    }\r\n    else{\r\n      this.getData();\r\n      this.setState({\r\n        rating: \"all\"\r\n      })\r\n    }\r\n  };\r\n\r\n  //change the state of the rating based on dropdown menu choice\r\n  handleRating=(event)=>{\r\n    console.log(\"inside handle rating\");\r\n    this.setState({rating: event.target.value});\r\n  };\r\n\r\n  //get the rating and filter the original gif array based on it\r\n  handleFilter=()=>{\r\n    switch(this.state.rating){\r\n      case \"g\":\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs.filter(gif => gif.rating === \"g\")\r\n        })\r\n        break;\r\n      case \"pg\":\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs.filter(gif => gif.rating === \"pg\")\r\n        })\r\n        break;\r\n      case \"pg-13\":\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs.filter(gif => gif.rating === \"pg-13\")\r\n        })\r\n        break;\r\n      default:\r\n        this.setState({\r\n          filteredGifs: this.state.allGifs\r\n        })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div id=\"search-filter-field\">\r\n\r\n        <div id=\"search-field\">\r\n          <label id=\"search-text\" for=\"ratings\">Enter a Keyword:</label>\r\n          <input\r\n            id=\"search-input\"\r\n            type=\"text\"\r\n            name=\"searchInput\"\r\n            placeholder=\"Search for a gif!\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <button id=\"search-btn\" onClick={() => this.handleSearch()}>Search</button>\r\n        </div>\r\n        \r\n        <div id=\"filter-field\">\r\n          <label id=\"filter-text\" for=\"ratings\">Filter by rating:</label>\r\n          <select id=\"dropdown\" name=\"ratings\" onChange={this.handleRating}>\r\n            <option value=\"all\" selected>Show all</option>\r\n            <option value=\"g\">G (General Audience)</option>\r\n            <option value=\"pg\">PG (Parental Guidance Suggested)</option>\r\n            <option value=\"pg-13\">PG-13 (Parents Strongly Cautioned)</option>  \r\n          </select>\r\n          <button id=\"filter-btn\" onClick={() => this.handleFilter()}>Filter</button>\r\n        </div>\r\n\r\n        <div id=\"gif-field\">\r\n          {this.state.filteredGifs.map(gif=>{\r\n              return <img class=\"gif\" src={gif.images.original.url}/>\r\n          })}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\components\\NavBar.js",["42","43"],"import React, { Component } from 'react'\r\nimport App from '../App'\r\nimport SearchField from './SearchField'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"App-header\">\r\n                    <h1>GIPHY</h1>\r\n                </div>\r\n\r\n                <div className=\"nav-bar\">\r\n                    <Link to=\"/\">\r\n                        <button className=\"nav-button\">\r\n                            TRENDING\r\n                        </button>\r\n                    </Link>\r\n                    <Link to=\"/Search\">\r\n                        <button className=\"nav-button\">\r\n                            SEARCH\r\n\r\n                        </button>\r\n                    </Link>\r\n                    <Link to=\"/Random\">\r\n                        <button className=\"nav-button\" onClick={() => window.location.href=\"/Random\"}>\r\n                            RANDOM\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div> \r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\Joe\\Desktop\\CSI-TTP\\Assignment-7-giphy\\Deploy-giphy\\Giphy-Search-And-Filter-App\\src\\components\\RandomSearch.js",["44","45"],"import React, { Component } from \"react\";\r\nimport App from '../App';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass RandomSearch extends React.Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        gifList: []\r\n      };\r\n      this.componentDidMount=this.componentDidMount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"In Mount\");\r\n        fetch(\r\n          \"https://api.giphy.com/v1/gifs/random?api_key=W8fWbmNISlnnYSoZC6fsnCxrmYHlodt8\"\r\n        )\r\n          .then(response => response.json())\r\n          .then((res) => {\r\n              console.log(res.data)\r\n            this.setState({\r\n                gifList: [...this.state.gifList, res.data]\r\n            });\r\n            console.log(this.state.gifList);\r\n          })\r\n      }\r\n\r\n      handleRandom=()=>{\r\n        // e.preventDefault();\r\n        this.getData();\r\n        <Link to=\"./Random\"></Link>\r\n      }\r\n\r\n      render() {\r\n        return (\r\n\r\n            <div>\r\n                <br/><br/>\r\n            { this.state.gifList.map(gif => {\r\n                return (\r\n                    <img id=\"gif\" src={gif.images.original.url} alt=\"gif\"/>\r\n                )\r\n    \r\n            })}\r\n            </div>\r\n            \r\n            )}\r\n        }\r\n    \r\n    export default RandomSearch;\r\n    ",["46","47"],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":11},{"ruleId":"52","severity":1,"message":"57","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":125,"column":22,"nodeType":"60","endLine":125,"endColumn":70},{"ruleId":"52","severity":1,"message":"56","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":11},{"ruleId":"52","severity":1,"message":"57","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":11},{"ruleId":"48","replacedBy":"61"},{"ruleId":"50","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","'SearchField' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["63"],["64"],"no-global-assign","no-unsafe-negation"]