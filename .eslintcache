[{"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\SearchField.js":"1","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\index.js":"2","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\App.js":"3","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\reportWebVitals.js":"4","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\TrendingGifs.js":"5","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\GifCard.js":"6"},{"size":2662,"mtime":1610662524799,"results":"7","hashOfConfig":"8"},{"size":500,"mtime":1610121254323,"results":"9","hashOfConfig":"8"},{"size":737,"mtime":1610590461540,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1610121254323,"results":"11","hashOfConfig":"8"},{"size":1001,"mtime":1610590461541,"results":"12","hashOfConfig":"8"},{"size":286,"mtime":1610652947473,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"bzmf2r",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\SearchField.js",["31","32","33","34"],"import React, { Component } from \"react\";\r\nimport GifCard from \"./GifCard\";\r\nimport { Link } from \"react-router-dom\";\r\n//import GifCard from './GifCard';\r\n\r\nexport default class SearchField extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gifName: \"\",\r\n      rating: \"all\",\r\n      allGifs: [],\r\n      gRatedGifs: [],\r\n      pgRatedGifs: [],\r\n      pg13RatedGifs: [],\r\n    };\r\n  }\r\n\r\n  //every time a user enters a gif name, update it\r\n  handleChange = (event) => {\r\n    console.log(\"inside handleChange\");\r\n    this.setState({ gifName: event.target.value });\r\n  };\r\n\r\n  //get data from an api\r\n  getData = async () => {\r\n    console.log(\"inside getData\");\r\n    try {\r\n      //get a response from an api\r\n      let response = await fetch(\r\n        \"http://api.giphy.com/v1/gifs/search?q=\" +\r\n          this.state.gifName +\r\n          \"&api_key=W8fWbmNISlnnYSoZC6fsnCxrmYHlodt8\"\r\n      );\r\n\r\n      //if there was an error, print it\r\n      if (!response.ok) {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n\r\n      //turn the response into a data object\r\n      let responseObject = await response.json();\r\n\r\n      this.setState({\r\n        allGifs: responseObject.data,\r\n        gRatedGifs: responseObject.data.filter(gif => gif.rating === \"g\"),\r\n        pgRatedGifs: responseObject.data.filter(gif => gif.rating === \"pg\"),\r\n        pg13RatedGifs: responseObject.data.filter(gif => gif.rating === \"pg-13\"),\r\n      })\r\n    }\r\n\r\n    catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  handleSearch=()=>{\r\n    if(this.state.gifName === \"\"){\r\n      alert(\"no results\")\r\n    }\r\n    else{\r\n      this.getData();\r\n    }\r\n  };\r\n\r\n  handleRating=(event)=>{\r\n    console.log(\"inside handle rating\");\r\n    this.setState({rating: event.target.value});\r\n  };\r\n\r\n  display=()=>{\r\n    console.log(\"inside display\")\r\n    if(this.state.rating === \"all\"){\r\n      console.log(\"inside if\")\r\n      this.state.allGifs.map((gif)=>{\r\n          <img src={gif.images.original.url}/>\r\n      })\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"searchInput\"\r\n          placeholder=\"Search for a gif!\"\r\n          onChange={this.handleChange}\r\n        />\r\n\r\n        <button\r\n          id=\"search-btn\"\r\n          onClick={() => this.handleSearch()}\r\n        >\r\n          Search\r\n        </button>\r\n\r\n        {/* <>\r\n          <h1>All gifs</h1>\r\n          {this.state.allGifs.map(gif=>{\r\n            return(\r\n              <img id=\"gif\" src={gif.images.original.url}/>\r\n            )\r\n          })}\r\n        </> */}\r\n\r\n\r\n\r\n        \r\n\r\n        <br/>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",["35","36"],"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\index.js",[],"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\App.js",[],"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\reportWebVitals.js",[],"C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\TrendingGifs.js",["37","38","39"],"import React, { Component } from \"react\";\r\nimport App from '../App';\r\nimport SearchField from \"./SearchField\";\r\n\r\nclass TrendingGifs extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      gifList: []\r\n    };\r\n    this.componentDidMount=this.componentDidMount.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"In Mount\");\r\n    fetch(\r\n      \"http://api.giphy.com/v1/gifs/trending?api_key=W8fWbmNISlnnYSoZC6fsnCxrmYHlodt8\"\r\n    )\r\n      .then(response => response.json())\r\n      .then((res) => {\r\n          console.log(res.data)\r\n        this.setState({\r\n          gifList: res.data,\r\n        });\r\n        console.log(this.state.gifList);\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        \r\n        <div id=\"gifList\">\r\n        { this.state.gifList.map(gif => {\r\n            return (\r\n                <img id=\"gif\" src={gif.images.original.url} alt=\"gif\"/>\r\n            )\r\n\r\n        })}\r\n        </div>\r\n        )}\r\n    }\r\n\r\nexport default TrendingGifs;\r\n","C:\\Users\\smilt\\OneDrive\\Desktop\\TTP\\assignment-7\\src\\components\\GifCard.js",["40"],"import React, { Component } from 'react'\r\n\r\nexport default class GifCard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <img id=\"gif\" src={this.props.image}/>\r\n                <h4>{this.props.rating}</h4>\r\n            </>\r\n        )\r\n    }\r\n}\r\n",["41","42"],{"ruleId":"43","severity":1,"message":"44","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":15},{"ruleId":"43","severity":1,"message":"47","line":3,"column":10,"nodeType":"45","messageId":"46","endLine":3,"endColumn":14},{"ruleId":"48","severity":1,"message":"49","line":75,"column":35,"nodeType":"50","messageId":"51","endLine":75,"endColumn":37},{"ruleId":"52","severity":1,"message":"53","line":76,"column":11,"nodeType":"54","endLine":76,"endColumn":47},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"43","severity":1,"message":"59","line":1,"column":17,"nodeType":"45","messageId":"46","endLine":1,"endColumn":26},{"ruleId":"43","severity":1,"message":"60","line":2,"column":8,"nodeType":"45","messageId":"46","endLine":2,"endColumn":11},{"ruleId":"43","severity":1,"message":"61","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":8,"column":17,"nodeType":"54","endLine":8,"endColumn":55},{"ruleId":"55","replacedBy":"62"},{"ruleId":"57","replacedBy":"63"},"no-unused-vars","'GifCard' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'Component' is defined but never used.","'App' is defined but never used.","'SearchField' is defined but never used.",["64"],["65"],"no-global-assign","no-unsafe-negation"]